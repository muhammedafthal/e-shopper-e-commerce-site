<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link rel="stylesheet" href="/css/addProduct.css">
</head>

<body>
    <form id="addProductForm" method="POST" action="/api/products" enctype="multipart/form-data" novalidate>
        <a href="/start/admin">HOME</a>
        <%- include('partials/header') %>

            <h3>Add Product</h3>

            <div>
                <label for="name">Product Name:</label>
                <input type="text" id="name" name="name">
                <span id="nameError" class="error-message">Product Name is required</span>
            </div>

            <div>
                <label for="price">Price:</label>
                <input type="number" id="price" name="price" max="100000">
                <span id="priceError" class="error-message">Price is required</span>
                <span id="priceLimitError" class="error-message">Price cannot exceed 1 lakh</span>
            </div>

            <div>
                <label for="description">Description:</label>
                <textarea id="description" name="description"></textarea>
                <span id="descriptionError" class="error-message">Description is required</span>
            </div>

            <div>
                <label for="category">Category:</label>
                <select id="category" name="category" required>
                    <option value="">Select Category</option>
                    <% categories.forEach(category=> { %>
                        <option value="<%= category._id %>">
                            <%= category.name %>
                        </option>
                        <% }) %>
                </select>
                <span id="categoryError" class="error-message">Category is required</span>
            </div>

            <div>
                <label for="subcategory">Subcategory:</label>
                <select id="subcategory" name="subcategory" required>
                    <option value="">Select Subcategory</option>
                    <% subcategories.forEach(subcategory=> { %>
                        <option value="<%= subcategory._id %>">
                            <%= subcategory.name %>
                        </option>
                        <% }) %>
                </select>
                <span id="subcategoryError" class="error-message">Subcategory is required</span>
            </div>

            <div>
                <label for="stock">Stock:</label>
                <input type="number" id="stock" name="stock" min="0" required>
                <span id="stockError" class="error-message">Stock is required</span>
            </div>

            <div>
                <label for="image">Product Image:</label>
                <input type="file" id="image" name="image" accept=".jpg">
            </div>

            <button type="submit">Add Product</button>
    </form>

    <script>
        const categoryInput = document.getElementById('category');
        const subcategoryInput = document.getElementById('subcategory');

        // Function to update subcategories based on selected category
        categoryInput.addEventListener('change', function () {
            const categoryId = categoryInput.value;
            const selectedCategory = categories.find(category => category._id == categoryId);

            // Clear previous subcategory options
            subcategoryInput.innerHTML = '<option value="">Select Subcategory</option>';

            if (selectedCategory && selectedCategory.subcategories) {
                selectedCategory.subcategories.forEach(subcategory => {
                    const option = document.createElement('option');
                    option.value = subcategory._id; // Use ObjectId or name, depending on your setup
                    option.textContent = subcategory.name;
                    subcategoryInput.appendChild(option);
                });
            }
        });

        document.getElementById("addProductForm").addEventListener("submit", function (event) {
            // Prevent form submission
            event.preventDefault();

            // Select fields and error message spans
            const nameInput = document.getElementById("name");
            const priceInput = document.getElementById("price");
            const descriptionInput = document.getElementById("description");
            const categoryInput = document.getElementById("category");
            const subcategoryInput = document.getElementById("subcategory");

            const nameError = document.getElementById("nameError");
            const priceError = document.getElementById("priceError");
            const priceLimitError = document.getElementById("priceLimitError");
            const descriptionError = document.getElementById("descriptionError");
            const categoryError = document.getElementById("categoryError");
            const subcategoryError = document.getElementById("subcategoryError");

            // Validate Stock
            const stockInput = document.getElementById("stock");
            const stockError = document.getElementById("stockError");

            if (stockInput.value.trim() === "" || parseInt(stockInput.value, 10) < 0) {
                stockError.style.display = "inline";
                isValid = false;
            } else {
                stockError.style.display = "none";
            }

            let isValid = true;

            // Validate Product Name
            if (nameInput.value.trim() === "") {
                nameError.style.display = "inline";
                isValid = false;
            } else {
                nameError.style.display = "none";
            }

            // Validate Price
            if (priceInput.value.trim() === "") {
                priceError.style.display = "inline";
                priceLimitError.style.display = "none"; // Hide limit error if price is empty
                isValid = false;
            } else if (parseFloat(priceInput.value) > 100000) {
                priceLimitError.style.display = "inline";
                priceError.style.display = "none"; // Hide required error if price is above limit
                isValid = false;
            } else {
                priceError.style.display = "none";
                priceLimitError.style.display = "none";
            }

            // Validate Description
            if (descriptionInput.value.trim() === "") {
                descriptionError.style.display = "inline";
                isValid = false;
            } else {
                descriptionError.style.display = "none";
            }

            // Validate Category
            if (categoryInput.value === "") {
                categoryError.style.display = "inline";
                isValid = false;
            } else {
                categoryError.style.display = "none";
            }

            // Validate Subcategory
            if (subcategoryInput.value === "") {
                subcategoryError.style.display = "inline";
                isValid = false;
            } else {
                subcategoryError.style.display = "none";
            }

            // Submit form if all fields are valid
            if (isValid) {
                document.getElementById("addProductForm").submit();
            }
        });

    </script>

</body>

</html>